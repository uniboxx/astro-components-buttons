---
import { Image } from 'astro:assets';
import image01 from '../images/image01.jpg';

const width = 300;
const height = 300;
---

<figure>
  <Image src={image01} alt="image01" priority width={width} />
  <figcaption>
    <h2>{Astro.self.name}</h2>
    <p>Lorem ipsum, dolor sit amet consectetur adipisicing elit. Quod, quam.</p>
    <a href="#">read more</a>
  </figcaption>
</figure>

<style define:vars={{ width, height }}>
  figure {
    --duration: 0.5s;
    --primary-color: #006266;
    position: relative;
    transition: var(--duration);
    border: 10px solid #fff;
    background-color: #444;
    width: calc(var(--width) * 1px);
    height: calc(var(--height) * 1px);
    overflow: hidden;
    img {
      transition: var(--duration);
      transition-delay: var(--duration);
      width: 100%;
      height: 100%;
      object-fit: contain;
    }
    figcaption {
      display: flex;
      position: absolute;
      top: 0;
      left: 0;
      flex-direction: column;
      justify-content: center;
      gap: 1rem;
      transition: var(--duration);
      width: 100%;
      height: 100%;
      color: #fff;
      text-align: center;
      h2 {
        background-color: black;
      }
      h2,
      p {
        transform: translateY(-250%);
        transition: var(--duration);
      }
      p,
      a {
        align-self: center;
        transition: var(--duration);
      }
      p {
        width: 80%;
      }
      a {
        transform: translateY(-600%);
        transition: calc(var(--duration) * 0.4);
        background-color: black;
        padding: 10px;
        color: inherit;
        text-decoration: none;
        text-transform: uppercase;
      }
    }
    &::before {
      position: absolute;
      top: 0;
      left: 0;
      opacity: 0;
      transition: calc(var(--duration) * 0.6);
      background-color: var(--primary-color);
      width: 100%;
      height: 100%;
      content: '';
    }

    &:hover {
      img {
        transform: scale(0) rotate(720deg);
        opacity: 0;
        transition-delay: 0s;
      }
      &::before {
        opacity: 1;
        transition-delay: calc(var(--duration) * 0.6);
      }
      h2,
      p,
      a {
        transform: translateY(0%);
      }
      h2 {
        transition-delay: calc(var(--duration) * 1.8);
      }
      p {
        transition-delay: calc(var(--duration) * 1.4);
      }
      a {
        transition-delay: var(--duration);
      }
    }
  }
</style>
