---
import { getImage } from 'astro:assets';

const { image, width, height } = Astro.props;

const optImg = await getImage({ src: image, width, height });

const { src } = optImg;
---

<figure>
  <figcaption>
    <h2>{Astro.self.name}</h2>
    <p>Lorem ipsum, dolor sit amet consectetur adipisicing elit. Quod, quam.</p>
    <a href="#">read more</a>
  </figcaption>
  <div class="image" style={`--url: url(${src})`}></div>
</figure>

<style define:vars={{ width, height, src }}>
  figure {
    --duration: 0.5s;
    position: relative;
    width: calc(var(--width) * 1px);
    height: calc(var(--height) * 1px);
    figcaption {
      display: flex;
      flex-direction: column;
      justify-content: center;
      gap: 1rem;
      background-color: #000;
      width: 100%;
      height: 100%;
      color: #fff;
      text-align: center;
      h2,
      a {
        background-color: white;
        color: black;
      }
      p,
      a {
        align-self: center;
      }
      p {
        width: 80%;
      }
      a {
        padding: 10px;
        text-decoration: none;
        text-transform: uppercase;
      }
    }
    .image {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;

      &::before,
      &::after {
        position: absolute;
        top: 0;
        transition: var(--duration);
        background-image: var(--url);
        width: 50%;
        height: 100%;
        content: '';
      }
      &::before {
        left: 0;
        transform-origin: bottom;
      }
      &::after {
        right: 0;
        transform-origin: top;
        background-position: right;
      }
    }

    &:hover {
      .image {
        &::before {
          transform: rotateX(90deg) translateY(50%);
        }
        &::after {
          transform: rotateX(90deg) translateY(-50%);
        }
      }
    }
  }
</style>
